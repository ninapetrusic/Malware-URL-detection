from sklearn import preprocessing
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np
import os

def returnFilteredData():
    data = pd.read_csv(os.path.join(os.path.dirname(__file__),'ProcessedData.csv'))
    rowsToDrop = []
    ## izbaci redove koji nemaju sve vrijednosti
    for i,row in data.iterrows():
        if row['pageEntropy'] == 0 or row['urlHostCountry'] == '-' or row['connectionSpeed'] == 0:
            rowsToDrop.append(i)
    ## izbaci stupce koji su za sve ili vecinu podataka 0
    data = data.drop(rowsToDrop, axis=0).drop(['urlHostIsIP','hostIsIP','server','client','numEmbeds','numObjects','numFragments','urlIntendedLifeSpan'], axis=1)
    data_params = data.copy().drop(['url','class'], axis=1)
    le = preprocessing.LabelEncoder()
    for column_name in data_params.columns:
        if data_params[column_name].dtype == object:  
            data_params[column_name] = le.fit_transform(data_params[column_name])
    ## ostavi numericke i bool podatke
    data_params = data_params.drop(['urlProtocol','urlHostCountry','urlRegCountry'],axis=1)

    ## korelacija i crtanje grafa
    correlation = data_params.corr().abs()
    mask = np.triu(np.ones_like(correlation, dtype=bool))
    f, ax = plt.subplots(figsize=(20, 15))
    cmap = sns.diverging_palette(220, 10, as_cmap=True)
    sns.heatmap(correlation, mask=mask, cmap=cmap, vmax=.3, center=0,
        square=True, linewidths=.5, cbar_kws={"shrink": .5}, annot=True)
    ## spremi graf korelacije
    plt.savefig('correlation.png')
    plt.clf()
    ## izbaci parametre s korelacijom vecom od thresholda
    threshold = 0.95
    upper = data_params.abs().where(np.triu(np.ones(data_params.shape), k=1).astype(bool))
    to_drop = [column for column in upper.columns if any(upper[column] > threshold)]
    data_filtered = data.copy()
    for column in to_drop:
        data_filtered = data_filtered.drop([column], axis=1)
    return data_filtered